version: '3.9'

services:
  web:
    image: php:8.2-apache
    container_name: php8.2-apache
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./app:/var/www/html/
      - ./php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./apache/vhost.conf:/etc/apache2/sites-available/000-default.conf
    environment:
      TZ: "Asia/Jakarta"
      APACHE_RUN_USER: www-data
      APACHE_RUN_GROUP: www-data
    env_file:
      - .env.php
    build:
      context: ./php
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

  db:
    image: mariadb:11.2
    container_name: mariadb
    restart: unless-stopped
    environment:
      TZ: "Asia/Jakarta"
    env_file:
      - .env.db
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - backend
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      TZ: "Asia/Jakarta"
      ADMINER_DESIGN: pepa
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    security_opt:
      - no-new-privileges:true

  backup:
    image: fradelg/mysql-cron-backup
    container_name: mysql-backup
    restart: unless-stopped
    volumes:
      - ./backups:/backup
      - mariadb_data:/var/lib/mysql:ro
    environment:
      - MYSQL_HOST=db
      - MYSQL_USER=root
      - MYSQL_PASS=${MYSQL_ROOT_PASSWORD}
      - MAX_BACKUPS=7
      - INIT_BACKUP=1
      - CRON_TIME=0 3 * * *
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

networks:
  backend:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.default_bridge: false
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1

volumes:
  mariadb_data:
    driver: local
